<!DOCTYPE html>
<html lang="en">
    <head>
    <%- include("./partials/head.ejs") %>
        <link href="../public/style/files.css" rel="stylesheet">
        <script type="module" src="https://md-block.verou.me/md-block.js"></script>
    </head>
    <body>
        <div id="hoverfile">
            <h1>Drop files here!</h1>
        </div>
        <%- include("./partials/sidebar.ejs", {admin: locals.admin}) %>
    <% if (locals.username) { %>
        <h1>Welcome, <%= username %></h1>
    <% } %>
    <input id="searchbar" type="text" placeholder="search">
    <div id="folderView">
            <% if (locals.subfolder){ %>
            <div class='folder' onclick="goBack()">
                <p>
                    Go Back
                </p>
            </div>
            <% } %>
     <% for (let i = 0; i < folders.length; i++){ %>
        <div class="folder" onclick="openFolder('<%= folders[i] %>')">
            <p>
                <%= folders[i] %>
            </p>
        </div>
    <% } %>
                <div class='folder' onclick="createFolder()">
                    <p>
                       +
                    </p>
                </div>

                <% if (locals.subfolder){ %>
                <div class='folder' style="background-color: #ff1100; color: white;" onclick="deleteFolder()">
                    <p>
                        Delete Folder 
                    </p>
                </div>
                <% } %>
    </div>
    <div id ="fileView">
    <% for (let i = 0; i < files.length; i++){ %>
        <div class="file" onclick="openFile('<%= files[i] %>')">
            <p>
                <%= files[i] %>
            </p>
        </div>
    <% } %>
                <div class="file" onclick="uploadFile()">
                    <p>
                        Upload File
                    </p>
                </div>
                <div class="file" onclick="createFile()">
                    <p>
                        Create File
                    </p>
        </div>
    </div>

        <script defer>
        function createFile(){
            askInput('Enter file name', ["Name"], (values)=>{
                let fileObj = new File([""], values[0])
                let path = window.location.pathname.split("/").slice(2).join('/')
                let formData = new FormData()
                formData.append("path", path);
                formData.append("file", fileObj)
                var req = fetch('/fileUpload', {
                    method: 'POST',
                    body: formData
                }).then(function(response){
                    return response.json()
                }).then(function(data){
                    if (data.alertType == 2){
                        createErrorAlert(data.alert)
                        return
                    }
                    createSuccessAlert(data.alert)
                    setTimeout(()=>{
                        window.location.pathname = "/modify/"+path+"/" + values[0]
                    }, 1000)
                })

            })
        }
        function uploadFile(){
            createInfoAlert("You can also drag files into the page and they will be added!")
            askInput("Enter the file", ["file"], (values)=>{
                let fileObj = values[0][0]
                let path = window.location.pathname.split("/").slice(2).join('/')
                let formData = new FormData()
                formData.append("path", path);
                formData.append("file", fileObj)
                var req = fetch('/fileUpload', {
                    method: 'POST',
                    body: formData
                }).then(function(response){
                    return response.json()
                }).then(function(data){
                    if (data.alertType == 2){
                        createErrorAlert(data.alert)
                        return
                    }
                    createSuccessAlert(data.alert)
                    setTimeout(()=>{
                        window.location.reload()
                    }, 1000)
                })
            })
        }
function deleteFolder(){
    askInput('Are you sure you want to delete the folder?', [], ()=>{
        formData = new FormData();
        let folder_path = window.location.pathname.split("/").slice(2)
        formData.append("folderName", folder_path[folder_path.length-1])
        folder_path.pop()
        formData.append("path", folder_path.join('/'));
        var req = fetch('/delFolder', {
            method: 'POST',
            body: formData
        }).then (function(response){
            return response.json()
        }).then(function(data){
            if (data.alertType == 2){
                createErrorAlert(data.alert)
                return
            }
            createSuccessAlert(data.alert)
            setTimeout(()=>{
                let x = window.location.pathname.split("/")
                x.pop()
                x = x.length == 2 ? '/' : x.join("/")
                window.location.pathname = x;
            }, 1000)
        })
    })
}
            function createFolder(){
                askInput('Enter name', ["Folder Name"], (values)=>{
                    formData = new FormData();
                    formData.append("folderName", values[0])
                    formData.append("path", window.location.pathname.split("/").slice(2).join("/"));
                    var req = fetch('/newFolder', {
                        method: 'POST',
                        body: formData
                    }).then (function(response){
                        return response.json()
                    }).then(function(data){
                        if (data.alertType == 2){
                            createErrorAlert(data.alert)
                            return
                        }
                        createSuccessAlert(data.alert)
                        setTimeout(()=>{window.location.reload()}, 1000)
                    })
                })
            }
            document.body.ondrop = (ev)=>{
                ev.preventDefault()

                let files = ev.dataTransfer.items;
                for (let i = 0; i < files.length; i++){
                    const file = files[i]
                    if (file.kind == "file"){
                        const fileObj = file.getAsFile();
                        let extension = fileObj.name.split(".")
                        if (extension.length == 1 && fileObj.size == 0){
                            createErrorAlert(`${fileObj.name} couldn't be uploaded, folders are not allowed`);
                            continue;
                        }
                        let path = window.location.pathname.split("/").slice(2).join('/')
                        let formData = new FormData()
                        formData.append("path", path);
                        formData.append("file", fileObj)
                        var req = fetch('/fileUpload', {
                            method: 'POST',
                            body: formData
                        }).then(function(response){
                            return response.json()
                        }).then(function(data){
                            if (data.alertType == 2){
                                createErrorAlert(data.alert)
                                return
                            }
                            createSuccessAlert(data.alert)
                            setTimeout(()=>{
                                window.location.reload()
                            }, 1000)
                        })
                    }
                }
                document.getElementById("hoverfile").style.opacity = "0"
            }
            document.body.ondragover = (ev)=>{
                ev.preventDefault()
                if (ev.dataTransfer.types.includes("Files")){
                    document.getElementById("hoverfile").style.opacity = '1'
                }
            }
            document.body.ondragleave = (ev)=>{
                document.getElementById("hoverfile").style.opacity = "0"
            }
            function goBack(){
                if (window.location.pathname == "/")return
                if (window.location.pathname.split("/").length == 3){
                    window.location.pathname = "/"
                }else{
                    let new_url = window.location.pathname.split("/")
                    new_url.pop()
                    window.location.pathname = new_url.join("/")
                }
            }
            function openFolder(folderName){
                if (window.location.pathname == "/"){
                    window.location.pathname = `/path/${folderName}`
                }else{
                    window.location.pathname = window.location.pathname + `/${folderName}`
                }
            }
            function openFile(fileName){
                fileName = window.location.pathname.split("/").slice(2).join("/") + "/" + fileName
                fileName = fileName[0] == '/' ? fileName : '/' + fileName;
                console.log(fileName)
                // Shadow Background
                let shadowBox = document.createElement("div")
                shadowBox.id = "shadowBox"
                let container = document.createElement("div");
                container.id ="container"
                let nameContainer = document.createElement("h2");
                let plain_text = document.createElement("p");
                plain_text.id = "plain"
                // Contains the name of file and the exit button
                let header = document.createElement("div")
                header.id = "header";
                let exitButton = document.createElement("p")
                // Loading icon while the server responds with contents of file
                let loading = document.createElement("div")
                loading.id = "loading"
                exitButton.id = "exit"
                exitButton.onclick = ()=>{
                    document.body.removeChild(shadowBox);
                }
                nameContainer.innerText = fileName;
                header.appendChild(nameContainer);
                header.appendChild(exitButton);
                container.appendChild(header);
                container.appendChild(loading);
                shadowBox.appendChild(container)
                document.body.appendChild(shadowBox)
                // Making request to the server
                const req = new XMLHttpRequest();
                req.open('GET', `/file/${fileName}`, true);
                req.send()
                // Reading response
                req.onload = function(){
                    const res = JSON.parse(req.responseText);
                    if (res.error){
                        createErrorAlert(res.content);
                        exitButton.onclick()
                        return
                    }
                    container.removeChild(loading);
                    let pDiv = fileName.split('.')
                    const extension = pDiv[pDiv.length - 1]
                    function nonButton(){
                        let downloadButton = document.createElement("a")
                        downloadButton.classList.add('randomA')
                        downloadButton.innerText = 'Download File'
                        downloadButton.href = "./file/" + fileName;
                        downloadButton.download = "";
                        container.appendChild(downloadButton)
                    }
                    function imgButton(){
                        let downloadButton = document.createElement("a")
                        downloadButton.classList.add('randomA')
                        downloadButton.innerText = 'Download File'
                        downloadButton.href = "./raw/" + fileName;
                        downloadButton.download = "";
                        container.appendChild(downloadButton)
                    }
                    if (res.erase){
                        let deleteButton = document.createElement("a")
                        deleteButton.classList.add("randomA")
                        deleteButton.innerText = "Erase File"
                        deleteButton.href = "./erase" + fileName
                        container.appendChild(deleteButton)
                    }
                    if (res.modify && ["png", "jpg", "jpeg"].includes(extension) == false){
                        let modifyButton = document.createElement("a")
                        modifyButton.classList.add("randomA")
                        modifyButton.innerText = "Edit File"
                        modifyButton.href = "./modify" + fileName
                        container.appendChild(modifyButton)
                    }
                    if (extension == "md"){
                        nonButton()
                        let mdBlock = document.createElement("md-block")
                        mdBlock.innerHTML = res.content;
                        container.appendChild(mdBlock)
                    }else if(["png", "jpg", "jpeg", "webp"].includes(extension)){
                        imgButton();
                        let img = document.createElement("img")
                        img.src= `./raw/${fileName}`
                        container.appendChild(img);
                    }else if(["js", "css", "html"].includes(extension)){
                        nonButton()
                        let content = document.createElement("script")
                        content.style.display = "inline"
                        content.type = "text/plain"
                        content.innerHTML = res.content;
                        container.appendChild(content)
                    }else{
                        nonButton();
                        plain_text.innerText = res.content;
                        container.appendChild(plain_text);
                    }
                }
            }
            let search = document.getElementById("searchbar");
            function checkSearch(){
                let files = document.getElementsByClassName("file");
                for (let i = 0; i < files.length; i++){
                    let fileName = files[i].innerText;
                    if (fileName.toLowerCase().includes(search.value.toLowerCase())){
                        files[i].style.display = "inline-flex";
                    }else {
                        files[i].style.display = "none";
                    }
                }
                let folders = document.getElementsByClassName("folder");
                for (let i = 0; i < folders.length; i++){
                    let folderName = folders[i].innerText;
                    if (folderName.toLowerCase().includes(search.value.toLowerCase())){
                        folders[i].style.display = "inline-flex";
                    }else {
                        folders[i].style.display = "none";
                    }
                }
            }
            search.onkeypress=checkSearch
            search.onchange = checkSearch
        </script>
    </body>
</html>
