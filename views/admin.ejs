<!DOCTYPE html>
<html lang="en">
    <head>
    <%- include("./partials/head.ejs") %>
    <link href="./public/style/admin.css" rel="stylesheet">
    </head>
    <body>
        <%- include("./partials/sidebar.ejs", {admin: locals.admin}) %>

        <div id="adminPanel">
            <header>
            <h1><%= locals.username %>'s admin panel</h1>
            </header>
            <details>
                <summary>
                    <h2>Users</h2>
                </summary>
                <table>
                    <thead>
                        <tr>
                            <td>ID</td>
                            <td>Username</td>
                            <td>User Group</td>
                            <td>Apply Changes</td>
                            <td>Unblock Account</td>
                            <td>Delete User</td>
                        </tr>
                    </thead>
                    <tbody>
                        <% for (let i = 0; i < users.length; i++){ %>
                            <tr id='user<%= i %>'>
                            <td>
                                <%= i+1 %>
                            </td>
                            <td>
                                <% if (locals.username != users[i].username){ %>
                                    <input type="text" value="<%= users[i].username%>">
                        <% }else{ %>
                                    <p><%= users[i].username %></p>
                                <% } %>
                            </td>
                            <td>
                                <% if (locals.username != users[i].username){ %>
                                <select value='<%= users[i].user_group %>'>
                                    <% for (let n = 0; n < user_groups.length; n++){ %>
                                    <option value='<%= user_groups[n].id %>' <%= users[i].user_group == user_groups[n].id  ? 'selected' : '' %>><%= user_groups[n].id == 0 ? 'admin' : user_groups[n].id == 1 ? 'default' : n-1 %></option>
                                    <% } %>
                                </select>
                                <% }else{ %>
                                <p>
                                <%= 'admin' %>
                                </p>
                        <% } %>
                            </td>
                            <td>
                        <button class="apply <%= users[i].username == locals.username ? 'unselectable' : '' %>" onclick='applyChanges(<%= i %>, <%= users[i].id %>)'>Apply Changes</button>
                            </td>
                            <td>
                                <button class="apply <%= users[i].username == locals.username ? 'unselectable' : '' %>" onclick='unblockAcc(<%= users[i].id %>)'>Unblock Account</button>
                            </td>
                            <td>
                                <button class='delete <%= users[i].username == locals.username ? 'unselectable' : '' %>' onclick="delUser(<%= users[i].id %>)">Delete User</button>
                            </td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>
            </details>
            <details>
                <summary>
                    <h2>General Permissions</h2>
                </summary>
                <table>
                    <thead>
                        <tr>
                            <td>Group Id</td>
                            <td>read</td>
                            <td>write</td>
                            <td>create</td>
                            <td>delete</td>
                            <td>Apply Changes</td>
                            <td>Delete Group</td>
                        </tr>
                    </thead>
                    <tbody id="userGroups">
                        <% for (let i = 0; i < user_groups.length; i++){ %>
            <tr <%= [0, 1].includes(user_groups[i].id) ? 'class=unselectable' : '""' %> id="group<%= user_groups[i].id %>">
                            <td>
<%= user_groups[i].id == 0 ? 'admin' : user_groups[i].id == 1 ? 'default' : i-1 %>
                            </td>
                            <td>
                                <input type="checkbox" <%= user_groups[i].read ? 'checked' : ''%> >
                            </td>
                            <td>
                                <input type="checkbox" <%= user_groups[i].write ? 'checked' : ''%> >
                            </td>
                            <td>
                                <input type="checkbox" <%= user_groups[i].createP ? 'checked' : ''%> >
                            </td>
                            <td>
                                <input type="checkbox" <%= user_groups[i].deleteP ? 'checked' : ''%> >
                            </td>
                            <td>
                                    <button class='apply <%= [0, 1].includes(user_groups[i].id) ? "unselectable" : "" %>' onclick="applyChangesGroup(<%= user_groups[i].id %>)">Apply Changes</button>
                            </td>
                            <td>
                                    <button class='delete <%= [0, 1].includes(user_groups[i].id) ? "unselectable" : "" %>' onclick="deleteGroup(<%= user_groups[i].id %>)">Delete Group</button>
                            </td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>
                <button onclick="addUserGroup()">
                    Add Group
                </button>
            </details>
            <details>
                <summary>
                    <h2>File Log</h2>
                </summary>
                <table>
                    <thead>
                        <tr>
                            <td>File</td>
                            <td>Action</td>
                            <td>Username</td>
                            <td>Time</td>
                        </tr>
                    </thead>
                    <tbody>
                        <% for (let i = 0; i < fileLog.length; i++){ %>
                        <tr class="<%= fileLog[i].action == 3 ? 'negative' : fileLog[i].action == 2 ? 'positive' : '' %>">
                            <td>
                                <%= fileLog[i].file %>
                            </td>
                            <td>
                                <%= ["read", "write", "create", "delete"][fileLog[i].action] %>
                            </td>
                            <td class="username">
                                <% var found = false; %>
                                <% for (let n = 0; n < users.length; n++){if(users[n].id === fileLog[i].userID){ %>
                                <%= users[n].username %>
                                <% found=true; %>
                                <% break}} %>
                                <%= !found ? "Deleted User" : "" %>
                            </td>
                            <td>
                                <%= new Date(fileLog[i].time + " GMT").toLocaleString() %>
                            </td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>
            </details>
            <details>
                <summary>
                    <h2>Login Log</h2>
                </summary>
                <table>
                    <thead>
                        <tr>
                            <td>Username</td>
                            <td>Failed</td>
                            <td>Time</td>
                        </tr>
                    </thead>
                    <tbody>
                        <% for (let i = 0; i < loginLog.length; i++){ %>
                        <tr class = "<%= loginLog[i].failed ? 'negative' : 'positive' %>">
                            <td>
                                <% var found = false; %>
                                <% for (let n = 0; n < users.length; n++){if(users[n].id === loginLog[i].userID){ %>
                                <%= users[n].username%>
                                <% found=true; %>
                                <% break}} %>
                                <%= !found ? "Deleted User" : "" %>
                            </td>
                            <td>
                                <%= loginLog[i].failed ? "true" : "false" %>
                            </td>
                            <td>
                                <%= new Date(loginLog[i].time + " GMT").toLocaleString() %>
                            </td>
                        </tr>
                        <% } %>
                    </tbody>
                </table>
            </details>
            <script defer>
                function applyChangesGroup(groupID){
                    const entries = document.getElementById("group"+groupID).getElementsByTagName("td")
                    const read = entries[1].children[0].checked;
                    const write = entries[2].children[0].checked;
                    const create = entries[3].children[0].checked;
                    const deleteP = entries[4].children[0].checked;
                    var permissions = []
                    permissions.push("groupID="+groupID)
                    if (read) permissions.push("read")
                    if (write) permissions.push("write")
                    if (create) permissions.push('create')
                    if (deleteP) permissions.push("delete")
                    const url = `/editUserGroup?${permissions.join("&")}`
                    let req = new XMLHttpRequest();
                    req.open('GET', url);
                    req.send();
                    req.onload = function(){
                        let res = JSON.parse(req.responseText)
                        if (res.alertType == 2){
                            createErrorAlert(res.alert);
                        }else{
                            createSuccessAlert(res.alert);
                            setTimeout(()=>{window.location.reload()}, 1000)
                        }
                    }
                }
                function deleteGroup(id){
                    let req = new XMLHttpRequest();
                    req.open('GET', '/deleteUserGroup?id='+id);
                    req.send();
                    req.onload = function(){
                        let res = JSON.parse(req.responseText)
                        if (res.alertType == 2){
                            createErrorAlert(res.alert);
                        }else{
                            createSuccessAlert(res.alert);
                        }
                    }
                }
                function unblockAcc(id){
                    let req = new XMLHttpRequest();
                    req.open('GET', '/unblockAccount?userID='+id);
                    req.send();
                    req.onload = function(){
                        let res = JSON.parse(req.responseText)
                        if (res.alertType == 2){
                            createErrorAlert(res.alert);
                        }else{
                            createSuccessAlert(res.alert);
                        }
                    }
                }
                function delUser(id){
                    createInfoAlert("If there are no admin users after deletion the next account to be created becomes an admin!")
                    askInput("You sure you want to delete user?", [], ()=>{
                    let req = new XMLHttpRequest();
                    req.open('GET', '/delUser?userID='+id);
                    req.send();
                    req.onload = function(){
                        let res = JSON.parse(req.responseText)
                        if (res.alertType == 2){
                            createErrorAlert(res.alert);
                        }else{
                            createSuccessAlert(res.alert);
                        }
                    }
                    })
                }

                function applyChanges(inID, id){
                    const form = document.getElementById('user'+inID);
                    const username = form.getElementsByTagName("input")[0].value;
                    const user_group = form.getElementsByTagName('select')[0].value;
                    let req = new XMLHttpRequest();
                    req.open('GET', `/editUserInfo?userID=${id}&username=${username}&userGroup=${user_group}`);
                    req.send();
                    req.onload = function(){
                        let res = JSON.parse(req.responseText)
                        if (res.alertType == 2){
                            createErrorAlert(res.alert);
                        }else{
                            createSuccessAlert(res.alert);
                        }
                    }
                }

                function addUserGroup(){
                    if (document.getElementById('groupCreator')) return
                    const groupTable = document.getElementById("userGroups")
                    var newRow = document.createElement("tr")
                    newRow.id = 'groupCreator'
                    newRow.innerHTML = "<td></td>"
                    for (let i = 0; i < 4; i++){
                        newRow.innerHTML = newRow.innerHTML + "<td> <input type='checkbox'> </td>"
                    }
                    newRow.innerHTML = newRow.innerHTML + "<td><button class='apply'>Apply changes</button></td>"
                    newRow.innerHTML = newRow.innerHTML + "<td><button class='delete'>Remove Group</button></td>"
                    entries = newRow.getElementsByTagName("td")
                    entries[entries.length-1].children[0].onclick =()=>{groupTable.removeChild(newRow)}
                    entries[entries.length-2].children[0].onclick=()=>{
                        const read = entries[1].children[0].checked;
                        const write = entries[2].children[0].checked;
                        const create = entries[3].children[0].checked;
                        const deleteP = entries[4].children[0].checked;
                        var permissions = []
                        if (read) permissions.push("read")
                        if (write) permissions.push("write")
                        if (create) permissions.push('create')
                        if (deleteP) permissions.push("delete")
                        const url = `/createUserGroup?${permissions.join("&")}`
                        let req = new XMLHttpRequest();
                        req.open('GET', url);
                        req.send();
                        req.onload = function(){
                            let res = JSON.parse(req.responseText)
                        if (res.alertType == 2){
                            createErrorAlert(res.alert);
                        }else{
                            createSuccessAlert(res.alert);
                            setTimeout(()=>{window.location.reload()}, 1000)
                        }
                    }
                    }
                    groupTable.appendChild(newRow)
                }
            </script>
    </body>
</html>
